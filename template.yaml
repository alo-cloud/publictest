AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:

  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${S3Bucket}/*

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - '*'
      StageName: $default

  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          TABLE_NAME: !Ref DynamoDBTable
      Events:
        Get:
          Type: HttpApi
          Properties:
            Path: /
            Method: GET
            ApiId: !Ref HttpApi
      Handler: index.lambda_handler
      InlineCode: |
        import os
        import boto3
        table_name = os.environ["TABLE_NAME"]
        table = boto3.resource("dynamodb").Table(table_name)
        def lambda_handler(event, context):
            items = table.scan()["Items"]
            return {
                "friends": items,
            }
      Policies:
      - AmazonDynamoDBFullAccess
      Runtime: python3.7

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: N
        - AttributeName: name
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: name
          KeyType: RANGE

Outputs:
  ApiUrl:
    Description: HTTP API invoke URL
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com"
  DynamoDBTable:
    Description: DynamoDB Table
    Value: !Ref DynamoDBTable
  S3Bucket:
    Description: S3 bucket
    Value: !Ref S3Bucket
  WebsiteURL:
    Description: Static website URL
    Value: !GetAtt S3Bucket.WebsiteURL

